<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.moa.mybatis.UserMapper">

    <resultMap id="userInfo_map" type="com.moa.model.vo.SimpleUserInfoVO">
        <id property="profileName" column="PICTURE_NAME"/>
        <id property="name" column="NAME"/>
        <id property="email" column="EMAIL"/>
        <id property="requestCnt" column="STORE_REQUEST_CNT"/>
        <id property="notReadMessageCnt" column="UNREAD_CNT"/>
        <id property="usingStorageCnt" column="STORAGE_CNT"/>
    </resultMap>

    <select id="selectUserInfo" parameterType="java.lang.Integer" resultMap="userInfo_map">
        select * from my_page_view
        where user_id = #{userId}
    </select>

    <select id="selectUserExist" parameterType="String" resultType="Integer">
        select count(*) as exist from user_tb where  nickname = #{userNick}
    </select>

    <resultMap id="checkLoginMap" type="com.moa.model.vo.LoginVO">
        <id property="userId" column="USERID"/>
        <result property="userId" column="USERID"/>
        <result property="password" column="password"/>
        <result property="nick" column="nick"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phoneNumber" column="phoneNumber"/>
        <result property="profile" column="profile"/>
        <result property="flag" column="flag"/>
        <collection property="authVOList" resultMap="authMap"/>
    </resultMap>

    <resultMap id="authMap" type="com.moa.model.vo.AuthVO">
        <result property="userId" column="userid"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <select id="checkLogin" parameterType="java.lang.String" resultMap="checkLoginMap">
        SELECT * FROM login_view WHERE email = #{email}
    </select>

    <select id="duplicationCheck" parameterType="hashMap" resultType="int">
        SELECT COUNT(*) FROM login_view
        <choose>
            <when test="nick != null">
                WHERE nick = #{nick}
                <if test="email != null">
                    AND email = #{email}
                </if>
            </when>
            <otherwise>
                <if test="email != null">
                    WHERE email = #{email}
                </if>
            </otherwise>
        </choose>
    </select>
    <select id="signUpUser" statementType="CALLABLE" parameterType="hashMap">

        CALL PI_INSERT_USER(#{AddressVO.lat},#{AddressVO.lng},#{AddressVO.postCode},#{AddressVO.baseAddress},#{AddressVO.detailAddress},
        #{UserVO.email},#{UserVO.password},#{UserVO.phoneNumber},#{UserVO.nick},#{UserVO.name},#{res, mode=OUT, jdbcType=INTEGER })

    </select>
    <select id="findPassword" parameterType="hashMap" resultType="String">
        SELECT email FROM login_view WHERE auth='ROLE_USER'
        AND PHONENUMBER LIKE #{phoneNumber} AND name = #{name} AND email = #{email}
    </select>
    <select id="findEmail" parameterType="hashMap" resultType="String">
        SELECT email FROM login_view WHERE auth='ROLE_USER'
        AND PHONENUMBER LIKE #{phoneNumber} AND name = #{name}
    </select>
    <update id="updatePassword" parameterType="hashMap">
        UPDATE user_tb SET user_pw = #{password} WHERE user_id = #{userId}
    </update>

    <update id="updatePasswordByEmailAndName" parameterType="hashMap">
        UPDATE user_tb SET user_pw = #{password} WHERE email = #{email} AND name = #{name}
    </update>

    <select id="updateUser" statementType="CALLABLE" parameterType="hashMap">
        CALL PI_UPDATE_MY_INFO(#{AddressVO.lat},#{AddressVO.lng},#{AddressVO.postCode},#{AddressVO.baseAddress},#{AddressVO.detailAddress},
        #{userId},#{phoneNumber},#{profile},'DEFAULT',#{res, mode=OUT, jdbcType=INTEGER })
    </select>

    <select id="searchAddress" parameterType="int" resultType="com.moa.model.vo.AddressVO">
        select postcode,baseaddress,detailaddress,latitude lat,longitude lng
        from address_view where userid = #{userId}
    </select>


    <update id="withdrawalUser" parameterType="int">
        UPDATE user_tb SET del_flag = 'Y' WHERE user_id = #{userId}
    </update>

</mapper>
